{
  "description": "Cython is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very comfortable way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.\nThis talk by a core developer introduces the Cython compiler by interactive code examples and presents recent enhancements in the language that continue to make Cython the best choice for the development of fast and portable Python extensions.",
  "language": "eng",
  "recorded": "2016-10-30",
  "speakers": [
    "Stefan Behnel"
  ],
  "thumbnail_url": "https://cast.itunes.uni-muenchen.de/clips/f7lu8lyAip/deliver_poster",
  "title": "Getting Native with Cython",
  "videos": [
    {
      "type": "mp4",
      "url": "https://cast.itunes.uni-muenchen.de/vod/clips/ASbeAZwk0i/quicktime.mp4"
    }
  ]
}
